{"ast":null,"code":"import _regeneratorRuntime from \"/Users/carlosmiret/Desktop/TallerAddalia/taller_vue_firebase/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/carlosmiret/Desktop/TallerAddalia/taller_vue_firebase/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/carlosmiret/Desktop/TallerAddalia/taller_vue_firebase/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { Firestore, VehiclesCollection /*VehiclesDoc*/ } from \"@/firebase-exports\";\n\n/**\r\n * Obtiene un número aleatorio para las motos.\r\n * @returns {number} Número aleatorio para las motos.\r\n */\nexport function getMotos() {\n  var numeroAleatorio = Math.floor(Math.random() * 100) + 1;\n  return numeroAleatorio;\n}\n\n/**\r\n * Obtiene un número aleatorio para los coches.\r\n * @returns {number} Número aleatorio para los coches.\r\n */\nexport function getCoches() {\n  var numeroAleatorio = Math.floor(Math.random() * 10) + 1;\n  return numeroAleatorio;\n}\n\n/**\r\n * Agrega un vehículo a la colección de vehículos.\r\n * @param {Object} data - Datos del vehículo a agregar.\r\n * @returns {Promise} Promesa que se resuelve cuando se agrega el vehículo.\r\n */\nexport function addVehicle(_x) {\n  return _addVehicle.apply(this, arguments);\n}\n\n/**\r\n * Agrega un coche a la colección de vehículos.\r\n * @param {Object} data - Datos del coche a agregar.\r\n * @returns {Promise} Promesa que se resuelve cuando se agrega el coche.\r\n */\nfunction _addVehicle() {\n  _addVehicle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return Firestore.addDoc(VehiclesCollection(data.userId), _objectSpread({}, data));\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _addVehicle.apply(this, arguments);\n}\nexport function addCoche(_x2) {\n  return _addCoche.apply(this, arguments);\n}\n\n/**\r\n * Agrega una moto a la colección de vehículos.\r\n * @param {Object} data - Datos de la moto a agregar.\r\n * @returns {Promise} Promesa que se resuelve cuando se agrega la moto.\r\n */\nfunction _addCoche() {\n  _addCoche = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return Firestore.addDoc(VehiclesCollection(data.userId), _objectSpread({}, data));\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _addCoche.apply(this, arguments);\n}\nexport function addMoto(_x3) {\n  return _addMoto.apply(this, arguments);\n}\nfunction _addMoto() {\n  _addMoto = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data) {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return Firestore.addDoc(VehiclesCollection(data.userId), _objectSpread({}, data));\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _addMoto.apply(this, arguments);\n}\nexport function signaturesSubscription(_x4, _x5) {\n  return _signaturesSubscription.apply(this, arguments);\n}\nfunction _signaturesSubscription() {\n  _signaturesSubscription = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(userId, data) {\n    var unsub;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          unsub = Firestore.onSnapshot(Firestore.query(SignaturesCollection(userId)), /*#__PURE__*/function () {\n            var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(querySnapshot) {\n              var signatures;\n              return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                while (1) switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.next = 2;\n                    return Promise.all(querySnapshot.docs.map( /*#__PURE__*/function () {\n                      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(doc) {\n                        var document;\n                        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                          while (1) switch (_context4.prev = _context4.next) {\n                            case 0:\n                              document = doc.data();\n                              return _context4.abrupt(\"return\", _objectSpread({\n                                id: doc.id\n                              }, document));\n                            case 2:\n                            case \"end\":\n                              return _context4.stop();\n                          }\n                        }, _callee4);\n                      }));\n                      return function (_x7) {\n                        return _ref2.apply(this, arguments);\n                      };\n                    }()));\n                  case 2:\n                    signatures = _context5.sent;\n                    // Guardamos en el store\n                    store.commit(\"setVehicles\", signatures);\n                  case 4:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }, _callee5);\n            }));\n            return function (_x6) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n          return _context6.abrupt(\"return\", unsub);\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return _signaturesSubscription.apply(this, arguments);\n}","map":{"version":3,"names":["Firestore","VehiclesCollection","getMotos","numeroAleatorio","Math","floor","random","getCoches","addVehicle","_x","_addVehicle","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_callee$","_context","prev","next","addDoc","userId","_objectSpread","abrupt","sent","stop","addCoche","_x2","_addCoche","_callee2","_callee2$","_context2","addMoto","_x3","_addMoto","_callee3","_callee3$","_context3","signaturesSubscription","_x4","_x5","_signaturesSubscription","_callee6","unsub","_callee6$","_context6","onSnapshot","query","SignaturesCollection","_ref","_callee5","querySnapshot","signatures","_callee5$","_context5","Promise","all","docs","map","_ref2","_callee4","doc","document","_callee4$","_context4","id","_x7","store","commit","_x6"],"sources":["/Users/carlosmiret/Desktop/TallerAddalia/taller_vue_firebase/src/services/vehiculos.js"],"sourcesContent":["import {\r\n  Firestore,\r\n  VehiclesCollection /*VehiclesDoc*/,\r\n} from \"@/firebase-exports\";\r\n\r\n/**\r\n * Obtiene un número aleatorio para las motos.\r\n * @returns {number} Número aleatorio para las motos.\r\n */\r\nexport function getMotos() {\r\n  let numeroAleatorio = Math.floor(Math.random() * 100) + 1;\r\n  return numeroAleatorio;\r\n}\r\n\r\n/**\r\n * Obtiene un número aleatorio para los coches.\r\n * @returns {number} Número aleatorio para los coches.\r\n */\r\nexport function getCoches() {\r\n  let numeroAleatorio = Math.floor(Math.random() * 10) + 1;\r\n  return numeroAleatorio;\r\n}\r\n\r\n/**\r\n * Agrega un vehículo a la colección de vehículos.\r\n * @param {Object} data - Datos del vehículo a agregar.\r\n * @returns {Promise} Promesa que se resuelve cuando se agrega el vehículo.\r\n */\r\nexport async function addVehicle(data) {\r\n  return await Firestore.addDoc(VehiclesCollection(data.userId), {\r\n    ...data,\r\n  });\r\n}\r\n\r\n/**\r\n * Agrega un coche a la colección de vehículos.\r\n * @param {Object} data - Datos del coche a agregar.\r\n * @returns {Promise} Promesa que se resuelve cuando se agrega el coche.\r\n */\r\nexport async function addCoche(data) {\r\n  return await Firestore.addDoc(VehiclesCollection(data.userId), {\r\n    ...data,\r\n  });\r\n}\r\n\r\n/**\r\n * Agrega una moto a la colección de vehículos.\r\n * @param {Object} data - Datos de la moto a agregar.\r\n * @returns {Promise} Promesa que se resuelve cuando se agrega la moto.\r\n */\r\nexport async function addMoto(data) {\r\n  return await Firestore.addDoc(VehiclesCollection(data.userId), {\r\n    ...data,\r\n  });\r\n}\r\n\r\nexport async function signaturesSubscription(userId, data) {\r\n  const unsub = Firestore.onSnapshot(\r\n    Firestore.query(SignaturesCollection(userId)),\r\n    async (querySnapshot) => {\r\n      let signatures = await Promise.all(\r\n        querySnapshot.docs.map(async (doc) => {\r\n          const document = doc.data();\r\n\r\n          return { id: doc.id, ...document };\r\n        })\r\n      );\r\n\r\n      // Guardamos en el store\r\n      store.commit(\"setVehicles\", signatures);\r\n    }\r\n  );\r\n\r\n  return unsub;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}