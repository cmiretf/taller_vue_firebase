{"ast":null,"code":"import _objectSpread from \"/Users/carlosmiret/Desktop/TallerAddalia/taller_vue_firebase/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/carlosmiret/Desktop/TallerAddalia/taller_vue_firebase/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/carlosmiret/Desktop/TallerAddalia/taller_vue_firebase/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { mapActions } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      username: \"\",\n      password: \"\"\n    };\n  },\n  beforeCreate: function beforeCreate() {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            Auth.onAuthStateChanged(Auth.getAuth(), /*#__PURE__*/function () {\n              var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(user) {\n                var authTime, sessionDuration, remaining, twoHours, finalRoute, message, currentPath, redirect;\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      if (!user) {\n                        _context.next = 33;\n                        break;\n                      }\n                      _context.prev = 1;\n                      _context.next = 4;\n                      return user.getIdTokenResult();\n                    case 4:\n                      _context.t0 = _context.sent.claims.auth_time;\n                      authTime = _context.t0 * 1000;\n                      sessionDuration = 1000 * 60 * 60 * 12; // 12 hour session\n                      if (!(Date.now() > authTime + sessionDuration)) {\n                        _context.next = 12;\n                        break;\n                      }\n                      _context.next = 10;\n                      return _this.expireSession();\n                    case 10:\n                      _context.next = 22;\n                      break;\n                    case 12:\n                      remaining = authTime + sessionDuration - Date.now();\n                      twoHours = 1000 * 60 * 60 * 2;\n                      _this.setSessionTimeOut(remaining > twoHours ? remaining : twoHours);\n                      _context.next = 17;\n                      return _this.fetchUser();\n                    case 17:\n                      _this.userUnsubscribe = _context.sent;\n                      _context.next = 20;\n                      return new Promise(function (resolve) {\n                        return setTimeout(resolve, 2000);\n                      });\n                    case 20:\n                      if (!_this.$store.getters.isDemoEnv) {\n                        updateNotifications();\n                        updatePlan();\n                      }\n                      if (_this.$route.name === \"LoginView\" || _this.$route.fullPath === \"/\") {\n                        finalRoute = _this.$route.query.redirect || \"/dashboard\";\n                        _this.$router.replace(finalRoute);\n                      }\n                    case 22:\n                      _context.next = 31;\n                      break;\n                    case 24:\n                      _context.prev = 24;\n                      _context.t1 = _context[\"catch\"](1);\n                      message = _this.$t(\"genericError\");\n                      _this.setSnackbar({\n                        position: \"top\",\n                        type: \"error\",\n                        message: message\n                      });\n                      _context.next = 30;\n                      return new Promise(function (resolve) {\n                        return setTimeout(resolve, 3000);\n                      });\n                    case 30:\n                      _this.logout();\n                    case 31:\n                      _context.next = 36;\n                      break;\n                    case 33:\n                      _this.userUnsubscribe();\n                      _this.clearSessionTimeOut();\n                      if (_this.$route.name !== \"LoginView\" && _this.$route.name !== \"SharedNotificationDetailView\") {\n                        currentPath = _this.$route.fullPath;\n                        redirect = currentPath !== \"/\" ? currentPath : undefined;\n                        _this.$router.push({\n                          name: \"LoginView\",\n                          query: {\n                            redirect: redirect\n                          }\n                        });\n                      }\n                    case 36:\n                      _this.waitingAuthUser = false;\n                    case 37:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }, _callee, null, [[1, 24]]);\n              }));\n              return function (_x) {\n                return _ref.apply(this, arguments);\n              };\n            }());\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions([\"configureUser\", \"fetchUser\", \"logout\"])), {}, {\n    login: function login() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this2.configureUser(_this2.username);\n            case 2:\n              _this2.$router.push({\n                name: \"home\"\n              });\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    }\n  })\n};","map":{"version":3,"names":["mapActions","data","username","password","beforeCreate","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_callee2$","_context2","prev","next","Auth","onAuthStateChanged","getAuth","_ref","_callee","user","authTime","sessionDuration","remaining","twoHours","finalRoute","message","currentPath","redirect","_callee$","_context","getIdTokenResult","t0","sent","claims","auth_time","Date","now","expireSession","setSessionTimeOut","fetchUser","userUnsubscribe","Promise","resolve","setTimeout","$store","getters","isDemoEnv","updateNotifications","updatePlan","$route","name","fullPath","query","$router","replace","t1","$t","setSnackbar","position","type","logout","clearSessionTimeOut","undefined","push","waitingAuthUser","stop","_x","apply","arguments","methods","_objectSpread","login","_this2","_callee3","_callee3$","_context3","configureUser"],"sources":["src/components/login/LoginCard.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Iniciar sesión</h2>\r\n    <form @submit.prevent=\"login\">\r\n      <div>\r\n        <label for=\"username\">Usuario:</label>\r\n        <input type=\"text\" id=\"username\" v-model=\"username\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">Contraseña:</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"password\" required />\r\n      </div>\r\n      <button @click=\"login()\" type=\"submit\">Iniciar sesión</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n  },\r\n  async beforeCreate() {\r\n    Auth.onAuthStateChanged(Auth.getAuth(), async (user) => {\r\n      if (user) {\r\n        try {\r\n          const authTime =\r\n            (await user.getIdTokenResult()).claims.auth_time * 1000;\r\n          const sessionDuration = 1000 * 60 * 60 * 12; // 12 hour session\r\n          if (Date.now() > authTime + sessionDuration)\r\n            await this.expireSession();\r\n          else {\r\n            const remaining = authTime + sessionDuration - Date.now();\r\n            const twoHours = 1000 * 60 * 60 * 2;\r\n            this.setSessionTimeOut(remaining > twoHours ? remaining : twoHours);\r\n\r\n            this.userUnsubscribe = await this.fetchUser();\r\n            await new Promise((resolve) => setTimeout(resolve, 2000));\r\n\r\n            if (!this.$store.getters.isDemoEnv) {\r\n              updateNotifications();\r\n              updatePlan();\r\n            }\r\n\r\n            if (\r\n              this.$route.name === \"LoginView\" ||\r\n              this.$route.fullPath === \"/\"\r\n            ) {\r\n              const finalRoute = this.$route.query.redirect || \"/dashboard\";\r\n              this.$router.replace(finalRoute);\r\n            }\r\n          }\r\n        } catch {\r\n          const message = this.$t(\"genericError\");\r\n          this.setSnackbar({ position: \"top\", type: \"error\", message });\r\n\r\n          await new Promise((resolve) => setTimeout(resolve, 3000));\r\n          this.logout();\r\n        }\r\n      } else {\r\n        this.userUnsubscribe();\r\n        this.clearSessionTimeOut();\r\n        if (\r\n          this.$route.name !== \"LoginView\" &&\r\n          this.$route.name !== \"SharedNotificationDetailView\"\r\n        ) {\r\n          const currentPath = this.$route.fullPath;\r\n          const redirect = currentPath !== \"/\" ? currentPath : undefined;\r\n          this.$router.push({ name: \"LoginView\", query: { redirect } });\r\n        }\r\n      }\r\n      this.waitingAuthUser = false;\r\n    });\r\n  },\r\n  methods: {\r\n    ...mapActions([\"configureUser\", \"fetchUser\", \"logout\"]),\r\n    async login() {\r\n      await this.configureUser(this.username);\r\n      this.$router.push({ name: \"home\" });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}